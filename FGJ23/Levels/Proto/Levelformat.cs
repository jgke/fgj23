// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FGJ23/Levels/Proto/levelformat.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FGJ23.Levels.Proto {

  /// <summary>Holder for reflection information generated from FGJ23/Levels/Proto/levelformat.proto</summary>
  public static partial class LevelformatReflection {

    #region Descriptor
    /// <summary>File descriptor for FGJ23/Levels/Proto/levelformat.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LevelformatReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidHYW1lSW1wbC9MZXZlbHMvUHJvdG8vbGV2ZWxmb3JtYXQucHJvdG8SC2xl",
            "dmVsZm9ybWF0IoUBCgVMZXZlbBIiCgZsYXllcnMYASADKAsyEi5sZXZlbGZv",
            "cm1hdC5MYXllchImCgh0aWxlc2V0cxgCIAMoCzIULmxldmVsZm9ybWF0LlRp",
            "bGVzZXQSEwoLU3ByaXRlTGF5ZXIYAyABKA0SDQoFVGl0bGUYBCABKAkSDAoE",
            "TmFtZRgFIAEoCSLMAgoFTGF5ZXISDQoFd2lkdGgYASABKAUSDgoGaGVpZ2h0",
            "GAIgASgFEhUKDXRpbGVzZXRfaW5kZXgYAyABKAUSEQoFdGlsZXMYBCADKAVC",
            "AhABEioKCmFyZWFFdmVudHMYBiADKAsyFi5sZXZlbGZvcm1hdC5BcmVhRXZl",
            "bnQSNgoQY29vcmRpbmF0ZUV2ZW50cxgHIAMoCzIcLmxldmVsZm9ybWF0LkNv",
            "b3JkaW5hdGVFdmVudBINCgVsb29wWBgIIAEoCBINCgVsb29wWRgJIAEoCBIO",
            "CgZ4U3BlZWQYCiABKAISDgoGeVNwZWVkGAsgASgCIlgKClRpbGVFZmZlY3QS",
            "CAoETk9ORRAAEg0KBlZfRkxJUBCAgIAIEg0KBkhfRkxJUBCAgIAQEhIKC1RS",
            "QU5TUEFSRU5UEICAgCASDgoHT05FX1dBWRCAgIBAIrsBCglBcmVhRXZlbnQS",
            "CQoBeBgCIAEoBRIJCgF5GAMgASgFEg0KBXdpZHRoGAQgASgFEg4KBmhlaWdo",
            "dBgFIAEoBRIuCgJpZBgGIAEoDjIiLmxldmVsZm9ybWF0LkFyZWFFdmVudC5B",
            "cmVhRXZlbnRJZBIMCgRkYXRhGAcgASgMIjsKC0FyZWFFdmVudElkEggKBE5P",
            "TkUQABITCg9GT1JDRURfTU9WRU1FTlQQARINCglMRVZFTF9FTkQQAiK5AQoP",
            "Q29vcmRpbmF0ZUV2ZW50EgkKAXgYAiABKAUSCQoBeRgDIAEoBRI6CgJpZBgE",
            "IAEoDjIuLmxldmVsZm9ybWF0LkNvb3JkaW5hdGVFdmVudC5Db29yZGluYXRl",
            "RXZlbnRJZBIMCgRkYXRhGAUgASgMIkYKEUNvb3JkaW5hdGVFdmVudElkEggK",
            "BE5PTkUQABIJCgVTUEFXThABEhEKDUhFQUxUSF9QSUNLVVAQAhIJCgVFTkVN",
            "WRADIiYKB1RpbGVzZXQSDQoFaW1hZ2UYASABKAkSDAoEbWFzaxgCIAEoCUIV",
            "qgISRkdKMjMuTGV2ZWxzLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FGJ23.Levels.Proto.Level), global::FGJ23.Levels.Proto.Level.Parser, new[]{ "Layers", "Tilesets", "SpriteLayer", "Title", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGJ23.Levels.Proto.Layer), global::FGJ23.Levels.Proto.Layer.Parser, new[]{ "Width", "Height", "TilesetIndex", "Tiles", "AreaEvents", "CoordinateEvents", "LoopX", "LoopY", "XSpeed", "YSpeed" }, null, new[]{ typeof(global::FGJ23.Levels.Proto.Layer.Types.TileEffect) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGJ23.Levels.Proto.AreaEvent), global::FGJ23.Levels.Proto.AreaEvent.Parser, new[]{ "X", "Y", "Width", "Height", "Id", "Data" }, null, new[]{ typeof(global::FGJ23.Levels.Proto.AreaEvent.Types.AreaEventId) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGJ23.Levels.Proto.CoordinateEvent), global::FGJ23.Levels.Proto.CoordinateEvent.Parser, new[]{ "X", "Y", "Id", "Data" }, null, new[]{ typeof(global::FGJ23.Levels.Proto.CoordinateEvent.Types.CoordinateEventId) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGJ23.Levels.Proto.Tileset), global::FGJ23.Levels.Proto.Tileset.Parser, new[]{ "Image", "Mask" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Level : pb::IMessage<Level> {
    private static readonly pb::MessageParser<Level> _parser = new pb::MessageParser<Level>(() => new Level());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Level> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGJ23.Levels.Proto.LevelformatReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Level() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Level(Level other) : this() {
      layers_ = other.layers_.Clone();
      tilesets_ = other.tilesets_.Clone();
      spriteLayer_ = other.spriteLayer_;
      title_ = other.title_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Level Clone() {
      return new Level(this);
    }

    /// <summary>Field number for the "layers" field.</summary>
    public const int LayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FGJ23.Levels.Proto.Layer> _repeated_layers_codec
        = pb::FieldCodec.ForMessage(10, global::FGJ23.Levels.Proto.Layer.Parser);
    private readonly pbc::RepeatedField<global::FGJ23.Levels.Proto.Layer> layers_ = new pbc::RepeatedField<global::FGJ23.Levels.Proto.Layer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FGJ23.Levels.Proto.Layer> Layers {
      get { return layers_; }
    }

    /// <summary>Field number for the "tilesets" field.</summary>
    public const int TilesetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FGJ23.Levels.Proto.Tileset> _repeated_tilesets_codec
        = pb::FieldCodec.ForMessage(18, global::FGJ23.Levels.Proto.Tileset.Parser);
    private readonly pbc::RepeatedField<global::FGJ23.Levels.Proto.Tileset> tilesets_ = new pbc::RepeatedField<global::FGJ23.Levels.Proto.Tileset>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FGJ23.Levels.Proto.Tileset> Tilesets {
      get { return tilesets_; }
    }

    /// <summary>Field number for the "SpriteLayer" field.</summary>
    public const int SpriteLayerFieldNumber = 3;
    private uint spriteLayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SpriteLayer {
      get { return spriteLayer_; }
      set {
        spriteLayer_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Level);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Level other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!layers_.Equals(other.layers_)) return false;
      if(!tilesets_.Equals(other.tilesets_)) return false;
      if (SpriteLayer != other.SpriteLayer) return false;
      if (Title != other.Title) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= layers_.GetHashCode();
      hash ^= tilesets_.GetHashCode();
      if (SpriteLayer != 0) hash ^= SpriteLayer.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      layers_.WriteTo(output, _repeated_layers_codec);
      tilesets_.WriteTo(output, _repeated_tilesets_codec);
      if (SpriteLayer != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SpriteLayer);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += layers_.CalculateSize(_repeated_layers_codec);
      size += tilesets_.CalculateSize(_repeated_tilesets_codec);
      if (SpriteLayer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpriteLayer);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Level other) {
      if (other == null) {
        return;
      }
      layers_.Add(other.layers_);
      tilesets_.Add(other.tilesets_);
      if (other.SpriteLayer != 0) {
        SpriteLayer = other.SpriteLayer;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            layers_.AddEntriesFrom(input, _repeated_layers_codec);
            break;
          }
          case 18: {
            tilesets_.AddEntriesFrom(input, _repeated_tilesets_codec);
            break;
          }
          case 24: {
            SpriteLayer = input.ReadUInt32();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Layer : pb::IMessage<Layer> {
    private static readonly pb::MessageParser<Layer> _parser = new pb::MessageParser<Layer>(() => new Layer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Layer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGJ23.Levels.Proto.LevelformatReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layer(Layer other) : this() {
      width_ = other.width_;
      height_ = other.height_;
      tilesetIndex_ = other.tilesetIndex_;
      tiles_ = other.tiles_.Clone();
      areaEvents_ = other.areaEvents_.Clone();
      coordinateEvents_ = other.coordinateEvents_.Clone();
      loopX_ = other.loopX_;
      loopY_ = other.loopY_;
      xSpeed_ = other.xSpeed_;
      ySpeed_ = other.ySpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layer Clone() {
      return new Layer(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "tileset_index" field.</summary>
    public const int TilesetIndexFieldNumber = 3;
    private int tilesetIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TilesetIndex {
      get { return tilesetIndex_; }
      set {
        tilesetIndex_ = value;
      }
    }

    /// <summary>Field number for the "tiles" field.</summary>
    public const int TilesFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_tiles_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> tiles_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Tiles {
      get { return tiles_; }
    }

    /// <summary>Field number for the "areaEvents" field.</summary>
    public const int AreaEventsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::FGJ23.Levels.Proto.AreaEvent> _repeated_areaEvents_codec
        = pb::FieldCodec.ForMessage(50, global::FGJ23.Levels.Proto.AreaEvent.Parser);
    private readonly pbc::RepeatedField<global::FGJ23.Levels.Proto.AreaEvent> areaEvents_ = new pbc::RepeatedField<global::FGJ23.Levels.Proto.AreaEvent>();
    /// <summary>
    ///repeated TileEffect areaEvents = 5;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FGJ23.Levels.Proto.AreaEvent> AreaEvents {
      get { return areaEvents_; }
    }

    /// <summary>Field number for the "coordinateEvents" field.</summary>
    public const int CoordinateEventsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::FGJ23.Levels.Proto.CoordinateEvent> _repeated_coordinateEvents_codec
        = pb::FieldCodec.ForMessage(58, global::FGJ23.Levels.Proto.CoordinateEvent.Parser);
    private readonly pbc::RepeatedField<global::FGJ23.Levels.Proto.CoordinateEvent> coordinateEvents_ = new pbc::RepeatedField<global::FGJ23.Levels.Proto.CoordinateEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FGJ23.Levels.Proto.CoordinateEvent> CoordinateEvents {
      get { return coordinateEvents_; }
    }

    /// <summary>Field number for the "loopX" field.</summary>
    public const int LoopXFieldNumber = 8;
    private bool loopX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LoopX {
      get { return loopX_; }
      set {
        loopX_ = value;
      }
    }

    /// <summary>Field number for the "loopY" field.</summary>
    public const int LoopYFieldNumber = 9;
    private bool loopY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LoopY {
      get { return loopY_; }
      set {
        loopY_ = value;
      }
    }

    /// <summary>Field number for the "xSpeed" field.</summary>
    public const int XSpeedFieldNumber = 10;
    private float xSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float XSpeed {
      get { return xSpeed_; }
      set {
        xSpeed_ = value;
      }
    }

    /// <summary>Field number for the "ySpeed" field.</summary>
    public const int YSpeedFieldNumber = 11;
    private float ySpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float YSpeed {
      get { return ySpeed_; }
      set {
        ySpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Layer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Layer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (TilesetIndex != other.TilesetIndex) return false;
      if(!tiles_.Equals(other.tiles_)) return false;
      if(!areaEvents_.Equals(other.areaEvents_)) return false;
      if(!coordinateEvents_.Equals(other.coordinateEvents_)) return false;
      if (LoopX != other.LoopX) return false;
      if (LoopY != other.LoopY) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XSpeed, other.XSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YSpeed, other.YSpeed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (TilesetIndex != 0) hash ^= TilesetIndex.GetHashCode();
      hash ^= tiles_.GetHashCode();
      hash ^= areaEvents_.GetHashCode();
      hash ^= coordinateEvents_.GetHashCode();
      if (LoopX != false) hash ^= LoopX.GetHashCode();
      if (LoopY != false) hash ^= LoopY.GetHashCode();
      if (XSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XSpeed);
      if (YSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YSpeed);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (TilesetIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TilesetIndex);
      }
      tiles_.WriteTo(output, _repeated_tiles_codec);
      areaEvents_.WriteTo(output, _repeated_areaEvents_codec);
      coordinateEvents_.WriteTo(output, _repeated_coordinateEvents_codec);
      if (LoopX != false) {
        output.WriteRawTag(64);
        output.WriteBool(LoopX);
      }
      if (LoopY != false) {
        output.WriteRawTag(72);
        output.WriteBool(LoopY);
      }
      if (XSpeed != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(XSpeed);
      }
      if (YSpeed != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(YSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (TilesetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TilesetIndex);
      }
      size += tiles_.CalculateSize(_repeated_tiles_codec);
      size += areaEvents_.CalculateSize(_repeated_areaEvents_codec);
      size += coordinateEvents_.CalculateSize(_repeated_coordinateEvents_codec);
      if (LoopX != false) {
        size += 1 + 1;
      }
      if (LoopY != false) {
        size += 1 + 1;
      }
      if (XSpeed != 0F) {
        size += 1 + 4;
      }
      if (YSpeed != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Layer other) {
      if (other == null) {
        return;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.TilesetIndex != 0) {
        TilesetIndex = other.TilesetIndex;
      }
      tiles_.Add(other.tiles_);
      areaEvents_.Add(other.areaEvents_);
      coordinateEvents_.Add(other.coordinateEvents_);
      if (other.LoopX != false) {
        LoopX = other.LoopX;
      }
      if (other.LoopY != false) {
        LoopY = other.LoopY;
      }
      if (other.XSpeed != 0F) {
        XSpeed = other.XSpeed;
      }
      if (other.YSpeed != 0F) {
        YSpeed = other.YSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 24: {
            TilesetIndex = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            tiles_.AddEntriesFrom(input, _repeated_tiles_codec);
            break;
          }
          case 50: {
            areaEvents_.AddEntriesFrom(input, _repeated_areaEvents_codec);
            break;
          }
          case 58: {
            coordinateEvents_.AddEntriesFrom(input, _repeated_coordinateEvents_codec);
            break;
          }
          case 64: {
            LoopX = input.ReadBool();
            break;
          }
          case 72: {
            LoopY = input.ReadBool();
            break;
          }
          case 85: {
            XSpeed = input.ReadFloat();
            break;
          }
          case 93: {
            YSpeed = input.ReadFloat();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Layer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum TileEffect {
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        /// 1 &lt;&lt; 24
        /// </summary>
        [pbr::OriginalName("V_FLIP")] VFlip = 16777216,
        /// <summary>
        /// 2 &lt;&lt; 24
        /// </summary>
        [pbr::OriginalName("H_FLIP")] HFlip = 33554432,
        /// <summary>
        /// 4 &lt;&lt; 24
        /// </summary>
        [pbr::OriginalName("TRANSPARENT")] Transparent = 67108864,
        /// <summary>
        /// 4 &lt;&lt; 24
        /// </summary>
        [pbr::OriginalName("ONE_WAY")] OneWay = 134217728,
      }

    }
    #endregion

  }

  public sealed partial class AreaEvent : pb::IMessage<AreaEvent> {
    private static readonly pb::MessageParser<AreaEvent> _parser = new pb::MessageParser<AreaEvent>(() => new AreaEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AreaEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGJ23.Levels.Proto.LevelformatReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaEvent(AreaEvent other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      width_ = other.width_;
      height_ = other.height_;
      id_ = other.id_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaEvent Clone() {
      return new AreaEvent(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 4;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 5;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 6;
    private global::FGJ23.Levels.Proto.AreaEvent.Types.AreaEventId id_ = global::FGJ23.Levels.Proto.AreaEvent.Types.AreaEventId.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FGJ23.Levels.Proto.AreaEvent.Types.AreaEventId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 7;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AreaEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AreaEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Id != other.Id) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Id != global::FGJ23.Levels.Proto.AreaEvent.Types.AreaEventId.None) hash ^= Id.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (Width != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Height);
      }
      if (Id != global::FGJ23.Levels.Proto.AreaEvent.Types.AreaEventId.None) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Id);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Id != global::FGJ23.Levels.Proto.AreaEvent.Types.AreaEventId.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AreaEvent other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Id != global::FGJ23.Levels.Proto.AreaEvent.Types.AreaEventId.None) {
        Id = other.Id;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Width = input.ReadInt32();
            break;
          }
          case 40: {
            Height = input.ReadInt32();
            break;
          }
          case 48: {
            Id = (global::FGJ23.Levels.Proto.AreaEvent.Types.AreaEventId) input.ReadEnum();
            break;
          }
          case 58: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AreaEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum AreaEventId {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("FORCED_MOVEMENT")] ForcedMovement = 1,
        [pbr::OriginalName("LEVEL_END")] LevelEnd = 2,
      }

    }
    #endregion

  }

  public sealed partial class CoordinateEvent : pb::IMessage<CoordinateEvent> {
    private static readonly pb::MessageParser<CoordinateEvent> _parser = new pb::MessageParser<CoordinateEvent>(() => new CoordinateEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinateEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGJ23.Levels.Proto.LevelformatReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinateEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinateEvent(CoordinateEvent other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      id_ = other.id_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinateEvent Clone() {
      return new CoordinateEvent(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private global::FGJ23.Levels.Proto.CoordinateEvent.Types.CoordinateEventId id_ = global::FGJ23.Levels.Proto.CoordinateEvent.Types.CoordinateEventId.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FGJ23.Levels.Proto.CoordinateEvent.Types.CoordinateEventId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinateEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinateEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Id != other.Id) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Id != global::FGJ23.Levels.Proto.CoordinateEvent.Types.CoordinateEventId.None) hash ^= Id.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (Id != global::FGJ23.Levels.Proto.CoordinateEvent.Types.CoordinateEventId.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Id);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Id != global::FGJ23.Levels.Proto.CoordinateEvent.Types.CoordinateEventId.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Id);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinateEvent other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Id != global::FGJ23.Levels.Proto.CoordinateEvent.Types.CoordinateEventId.None) {
        Id = other.Id;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Id = (global::FGJ23.Levels.Proto.CoordinateEvent.Types.CoordinateEventId) input.ReadEnum();
            break;
          }
          case 42: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CoordinateEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CoordinateEventId {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("SPAWN")] Spawn = 1,
        [pbr::OriginalName("HEALTH_PICKUP")] HealthPickup = 2,
        [pbr::OriginalName("ENEMY")] Enemy = 3,
      }

    }
    #endregion

  }

  public sealed partial class Tileset : pb::IMessage<Tileset> {
    private static readonly pb::MessageParser<Tileset> _parser = new pb::MessageParser<Tileset>(() => new Tileset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tileset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGJ23.Levels.Proto.LevelformatReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tileset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tileset(Tileset other) : this() {
      image_ = other.image_;
      mask_ = other.mask_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tileset Clone() {
      return new Tileset(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private string image_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mask" field.</summary>
    public const int MaskFieldNumber = 2;
    private string mask_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mask {
      get { return mask_; }
      set {
        mask_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tileset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tileset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Image != other.Image) return false;
      if (Mask != other.Mask) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (Mask.Length != 0) hash ^= Mask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Image.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
      if (Mask.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Mask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (Mask.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tileset other) {
      if (other == null) {
        return;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.Mask.Length != 0) {
        Mask = other.Mask;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
          case 18: {
            Mask = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
